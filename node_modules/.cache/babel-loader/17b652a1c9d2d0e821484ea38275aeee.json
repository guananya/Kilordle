{"ast":null,"code":"export function isYellow(wordle,guess,i){// Out of bounds sanity check\nif(i<0||i>5)return false;var letter=guess[i];// Exact guess is not yellow\nif(wordle[i]===letter)return false;// Count non-guessed instances of guess letter\nvar numMisplaced=wordle.split('').filter(function(trueLetter,j){return trueLetter===letter&&guess[j]!==letter;}).length;// Count instances of guess letter that are not exact guesses before current\nvar numPreviousMisplaced=guess.split('').filter(function(guessLetter,j){return guessLetter===letter&&wordle[j]!==letter&&j<i;}).length;return numPreviousMisplaced<numMisplaced;}","map":{"version":3,"sources":["/Users/ananyagupta/Desktop/kilordle/src/util/isYellow.ts"],"names":["isYellow","wordle","guess","i","letter","numMisplaced","split","filter","trueLetter","j","length","numPreviousMisplaced","guessLetter"],"mappings":"AAAA,MAAO,SAASA,CAAAA,QAAT,CAAkBC,MAAlB,CAAkCC,KAAlC,CAAiDC,CAAjD,CAAqE,CACxE;AACA,GAAGA,CAAC,CAAG,CAAJ,EAASA,CAAC,CAAG,CAAhB,CAAmB,MAAO,MAAP,CAEnB,GAAMC,CAAAA,MAAM,CAAGF,KAAK,CAACC,CAAD,CAApB,CAEA;AACA,GAAGF,MAAM,CAACE,CAAD,CAAN,GAAcC,MAAjB,CAAyB,MAAO,MAAP,CAEzB;AACA,GAAMC,CAAAA,YAAY,CAAGJ,MAAM,CAACK,KAAP,CAAa,EAAb,EAAiBC,MAAjB,CACjB,SAACC,UAAD,CAAaC,CAAb,QAAoBD,CAAAA,UAAU,GAAKJ,MAAf,EAAyBF,KAAK,CAACO,CAAD,CAAL,GAAaL,MAA1D,EADiB,EAEnBM,MAFF,CAIA;AACA,GAAMC,CAAAA,oBAAoB,CAAGT,KAAK,CAACI,KAAN,CAAY,EAAZ,EAAgBC,MAAhB,CACzB,SAACK,WAAD,CAAcH,CAAd,QAAqBG,CAAAA,WAAW,GAAKR,MAAhB,EAA0BH,MAAM,CAACQ,CAAD,CAAN,GAAcL,MAAxC,EAAkDK,CAAC,CAAGN,CAA3E,EADyB,EAE3BO,MAFF,CAIA,MAAQC,CAAAA,oBAAoB,CAAGN,YAA/B,CACH","sourcesContent":["export function isYellow(wordle: string, guess: string, i: number): boolean {\n    // Out of bounds sanity check\n    if(i < 0 || i > 5) return false;\n\n    const letter = guess[i];\n\n    // Exact guess is not yellow\n    if(wordle[i] === letter) return false;\n\n    // Count non-guessed instances of guess letter\n    const numMisplaced = wordle.split('').filter(\n        (trueLetter, j) => (trueLetter === letter && guess[j] !== letter)\n    ).length;\n\n    // Count instances of guess letter that are not exact guesses before current\n    const numPreviousMisplaced = guess.split('').filter(\n        (guessLetter, j) => (guessLetter === letter && wordle[j] !== letter && j < i)\n    ).length;\n\n    return (numPreviousMisplaced < numMisplaced);\n}"]},"metadata":{},"sourceType":"module"}