{"ast":null,"code":"export function isYellow(wordle, guess, i) {\n  // Out of bounds sanity check\n  if (i < 0 || i > 5) return false;\n  const letter = guess[i]; // Exact guess is not yellow\n\n  if (wordle[i] === letter) return false; // Count non-guessed instances of guess letter\n\n  const numMisplaced = wordle.split('').filter((trueLetter, j) => trueLetter === letter && guess[j] !== letter).length; // Count instances of guess letter that are not exact guesses before current\n\n  const numPreviousMisplaced = guess.split('').filter((guessLetter, j) => guessLetter === letter && wordle[j] !== letter && j < i).length;\n  return numPreviousMisplaced < numMisplaced;\n}","map":{"version":3,"sources":["/Users/ananyagupta/Desktop/kilordle/src/util/isYellow.ts"],"names":["isYellow","wordle","guess","i","letter","numMisplaced","split","filter","trueLetter","j","length","numPreviousMisplaced","guessLetter"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,MAAlB,EAAkCC,KAAlC,EAAiDC,CAAjD,EAAqE;AACxE;AACA,MAAGA,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG,CAAhB,EAAmB,OAAO,KAAP;AAEnB,QAAMC,MAAM,GAAGF,KAAK,CAACC,CAAD,CAApB,CAJwE,CAMxE;;AACA,MAAGF,MAAM,CAACE,CAAD,CAAN,KAAcC,MAAjB,EAAyB,OAAO,KAAP,CAP+C,CASxE;;AACA,QAAMC,YAAY,GAAGJ,MAAM,CAACK,KAAP,CAAa,EAAb,EAAiBC,MAAjB,CACjB,CAACC,UAAD,EAAaC,CAAb,KAAoBD,UAAU,KAAKJ,MAAf,IAAyBF,KAAK,CAACO,CAAD,CAAL,KAAaL,MADzC,EAEnBM,MAFF,CAVwE,CAcxE;;AACA,QAAMC,oBAAoB,GAAGT,KAAK,CAACI,KAAN,CAAY,EAAZ,EAAgBC,MAAhB,CACzB,CAACK,WAAD,EAAcH,CAAd,KAAqBG,WAAW,KAAKR,MAAhB,IAA0BH,MAAM,CAACQ,CAAD,CAAN,KAAcL,MAAxC,IAAkDK,CAAC,GAAGN,CADlD,EAE3BO,MAFF;AAIA,SAAQC,oBAAoB,GAAGN,YAA/B;AACH","sourcesContent":["export function isYellow(wordle: string, guess: string, i: number): boolean {\n    // Out of bounds sanity check\n    if(i < 0 || i > 5) return false;\n\n    const letter = guess[i];\n\n    // Exact guess is not yellow\n    if(wordle[i] === letter) return false;\n\n    // Count non-guessed instances of guess letter\n    const numMisplaced = wordle.split('').filter(\n        (trueLetter, j) => (trueLetter === letter && guess[j] !== letter)\n    ).length;\n\n    // Count instances of guess letter that are not exact guesses before current\n    const numPreviousMisplaced = guess.split('').filter(\n        (guessLetter, j) => (guessLetter === letter && wordle[j] !== letter && j < i)\n    ).length;\n\n    return (numPreviousMisplaced < numMisplaced);\n}"]},"metadata":{},"sourceType":"module"}