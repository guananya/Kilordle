{"ast":null,"code":"var _jsxFileName = \"/Users/ananyagupta/Desktop/kilordle/src/components/Keyboard.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n`;\n_c = Container;\nconst Content = styled.div`\n  width: 100%;\n  max-width: 600px;\n  background-color: #FFF;\n  padding: 12px;\n`;\n_c2 = Content;\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n_c3 = Row;\nconst Key = styled.div`\n  width: ${_ref => {\n  let {\n    letter\n  } = _ref;\n  return letter === '+' ? '55px' : '40px';\n}};\n  height: 40px;\n  font-size: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid rgba(0,0,0,0.3);\n  border-radius: 10px;\n  cursor: pointer;\n  user-select: none;\n  :hover {\n    background-color: #EEE;\n  }\n\n  \n  ${_ref2 => {\n  let {\n    used\n  } = _ref2;\n  return used && `\n    background-color: #EEE;  \n  `;\n}}\n`;\n_c4 = Key;\nconst rows = ['qwertyuiop', 'asdfghjkl', '+zxcvbnm-'];\n\nfunction Keyboard(_ref3) {\n  let {\n    expired,\n    usedLetters,\n    onKeyPress\n  } = _ref3;\n\n  if (expired) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: \"No more guesses. Why have you done this to yourself?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(Row, {\n          children: row.split('').map(letter => /*#__PURE__*/_jsxDEV(Key, {\n            used: usedLetters.indexOf(letter) !== -1,\n            letter: letter,\n            onClick: () => onKeyPress(letter),\n            children: letter === '+' ? 'GO' : letter === '-' ? '⌫' : letter\n          }, letter, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this))\n        }, row, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_c5 = Keyboard;\nexport default Keyboard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"Key\");\n$RefreshReg$(_c5, \"Keyboard\");","map":{"version":3,"sources":["/Users/ananyagupta/Desktop/kilordle/src/components/Keyboard.tsx"],"names":["React","styled","Container","div","Content","Row","Key","letter","used","rows","Keyboard","expired","usedLetters","onKeyPress","map","row","split","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,S;AAUN,MAAME,OAAO,GAAGH,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA;AACA,CALA;MAAMC,O;AAON,MAAMC,GAAG,GAAGJ,MAAM,CAACE,GAAI;AACvB;AACA;AACA;AACA,CAJA;MAAME,G;AAMN,MAAMC,GAAG,GAAGL,MAAM,CAACE,GAAqC;AACxD,WAAW;AAAA,MAAC;AAAEI,IAAAA;AAAF,GAAD;AAAA,SAAiBA,MAAM,KAAK,GAAZ,GAAmB,MAAnB,GAA4B,MAA5C;AAAA,CAAmD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAcA,IAAI,IAAK;AAC3B;AACA,GAFI;AAAA,CAEA;AACJ,CAnBA;MAAMF,G;AAqBN,MAAMG,IAAI,GAAG,CAAC,YAAD,EAAc,WAAd,EAA0B,WAA1B,CAAb;;AAEA,SAASC,QAAT,QAAwI;AAAA,MAAtH;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,GAAsH;;AACtI,MAAGF,OAAH,EAAY;AACR,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOH,GARD,MAQO;AACH,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,OAAD;AAAA,kBACGF,IAAI,CAACK,GAAL,CAAUC,GAAD,iBACR,QAAC,GAAD;AAAA,oBACGA,GAAG,CAACC,KAAJ,CAAU,EAAV,EAAcF,GAAd,CAAmBP,MAAD,iBACjB,QAAC,GAAD;AAAK,YAAA,IAAI,EAAEK,WAAW,CAACK,OAAZ,CAAoBV,MAApB,MAA8B,CAAC,CAA1C;AAA0D,YAAA,MAAM,EAAEA,MAAlE;AAA0E,YAAA,OAAO,EAAE,MAAMM,UAAU,CAACN,MAAD,CAAnG;AAAA,sBAA8GA,MAAM,KAAK,GAAX,GAAiB,IAAjB,GAAwBA,MAAM,KAAK,GAAX,GAAiB,GAAjB,GAAuBA;AAA7J,aAAkDA,MAAlD;AAAA;AAAA;AAAA;AAAA,kBADD;AADH,WAAUQ,GAAV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcH;AACF;;MAzBQL,Q;AA2BT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  max-width: 600px;\n  background-color: #FFF;\n  padding: 12px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst Key = styled.div<{letter: string, used: boolean}>`\n  width: ${({ letter }) => (letter === '+') ? '55px' : '40px'};\n  height: 40px;\n  font-size: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid rgba(0,0,0,0.3);\n  border-radius: 10px;\n  cursor: pointer;\n  user-select: none;\n  :hover {\n    background-color: #EEE;\n  }\n\n  \n  ${({ used }) => used && `\n    background-color: #EEE;  \n  `}\n`;\n\nconst rows = ['qwertyuiop','asdfghjkl','+zxcvbnm-'];\n\nfunction Keyboard({ expired, usedLetters, onKeyPress }: { expired: boolean, usedLetters: string[], onKeyPress: (key: string) => void }) {\n  if(expired) {\n      return (\n        <Container>\n          <Content>\n            No more guesses. Why have you done this to yourself?\n          </Content>\n        </Container>\n      );\n  } else {\n      return (\n        <Container>\n          <Content>\n            {rows.map((row) => (\n              <Row key={row}>\n                {row.split('').map((letter) => (\n                  <Key used={usedLetters.indexOf(letter)!==-1} key={letter} letter={letter} onClick={() => onKeyPress(letter)}>{letter === '+' ? 'GO' : letter === '-' ? '⌫' : letter}</Key>\n                ))}\n\n              </Row>\n            ))}\n          </Content>\n        </Container>\n      );\n  }\n}\n\nexport default Keyboard;\n"]},"metadata":{},"sourceType":"module"}