{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ananyagupta/Desktop/kilordle/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import styled from'styled-components';import{checkValidity}from'../util/checkValidity';import{isYellow}from'../util/isYellow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  padding: 2px;\\n  margin: 2px;\\n  border: 1px solid rgba(0,0,0,0.1);\\n\"])));var Row=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n\"])));var Letter=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 20px;\\n  height: 20px;\\n  border: 1px solid rgba(0,0,0,0.3);\\n  border-radius: 5px;\\n  background-color: #F7F8F9;\\n  align-items: center;\\n  justify-content: center;\\n  \",\"\\n  \",\"\\n  \",\"\\n\"])),function(_ref){var yellow=_ref.yellow;return yellow&&\"\\n    background-color: #EEDE23;  \\n  \";},function(_ref2){var green=_ref2.green;return green&&\"\\n    background-color: #22EE33;  \\n  \";},function(_ref3){var red=_ref3.red;return red&&\"\\n    background-color: #DE5956;\\n  \";});function Puzzle(_ref4){var expired=_ref4.expired,wordle=_ref4.wordle,working=_ref4.working,guesslist=_ref4.guesslist;return/*#__PURE__*/_jsxs(Container,{children:[guesslist.map(function(guess,gnum){return/*#__PURE__*/_jsx(Row,{children:guess.split('').map(function(letter,i){return/*#__PURE__*/_jsx(Letter,{green:letter===wordle[i],yellow:isYellow(wordle,guess,i),children:letter},\"\".concat(letter).concat(i,\",\").concat(gnum));})},guess);}),!expired&&/*#__PURE__*/_jsxs(Row,{children:[working.split('').map(function(letter,i){return/*#__PURE__*/_jsx(Letter,{red:working.length===5&&!checkValidity(working),children:letter},\"\".concat(letter).concat(i,\"W\"));}),working.length<=5&&Array.from(Array(5-working.length)).map(function(e,i){return/*#__PURE__*/_jsx(Letter,{children:\" \"},\"empty-\".concat(i));})]})]});}export default Puzzle;","map":{"version":3,"sources":["/Users/ananyagupta/Desktop/kilordle/src/components/Puzzle.tsx"],"names":["React","styled","checkValidity","isYellow","Container","div","Row","Letter","yellow","green","red","Puzzle","expired","wordle","working","guesslist","map","guess","gnum","split","letter","i","length","Array","from","e"],"mappings":"+LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,OAASC,QAAT,KAAyB,kBAAzB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGH,MAAM,CAACI,GAAV,uLAAf,CAQA,GAAMC,CAAAA,GAAG,CAAGL,MAAM,CAACI,GAAV,+GAAT,CAKA,GAAME,CAAAA,MAAM,CAAGN,MAAM,CAACI,GAAV,4RASR,kBAAGG,CAAAA,MAAH,MAAGA,MAAH,OAAgBA,CAAAA,MAAM,0CAAtB,EATQ,CAYR,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,0CAApB,EAZQ,CAeR,mBAAGC,CAAAA,GAAH,OAAGA,GAAH,OAAaA,CAAAA,GAAG,wCAAhB,EAfQ,CAAZ,CAoBA,QAASC,CAAAA,MAAT,OAUG,IATDC,CAAAA,OASC,OATDA,OASC,CARDC,MAQC,OARDA,MAQC,CAPDC,OAOC,OAPDA,OAOC,CANDC,SAMC,OANDA,SAMC,CACD,mBACA,MAAC,SAAD,YACGA,SAAS,CAACC,GAAV,CAAc,SAACC,KAAD,CAAQC,IAAR,qBACb,KAAC,GAAD,WACGD,KAAK,CAACE,KAAN,CAAY,EAAZ,EAAgBH,GAAhB,CAAoB,SAACI,MAAD,CAASC,CAAT,qBACnB,KAAC,MAAD,EAAsC,KAAK,CAAED,MAAM,GAAKP,MAAM,CAACQ,CAAD,CAA9D,CAAmE,MAAM,CAAElB,QAAQ,CAACU,MAAD,CAASI,KAAT,CAAgBI,CAAhB,CAAnF,UAAwGD,MAAxG,YAAgBA,MAAhB,SAAyBC,CAAzB,aAA8BH,IAA9B,EADmB,EAApB,CADH,EAAUD,KAAV,CADa,EAAd,CADH,CAQG,CAACL,OAAD,eACC,MAAC,GAAD,YACGE,OAAO,CAACK,KAAR,CAAc,EAAd,EAAkBH,GAAlB,CAAsB,SAACI,MAAD,CAASC,CAAT,qBACrB,KAAC,MAAD,EAAQ,GAAG,CAAEP,OAAO,CAACQ,MAAR,GAAmB,CAAnB,EAAwB,CAACpB,aAAa,CAACY,OAAD,CAAnD,UAAsFM,MAAtF,YAAsEA,MAAtE,SAA+EC,CAA/E,MADqB,EAAtB,CADH,CAIGP,OAAO,CAACQ,MAAR,EAAkB,CAAlB,EAAuBC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAIT,OAAO,CAACQ,MAAb,CAAhB,EAAsCN,GAAtC,CAA0C,SAACS,CAAD,CAAIJ,CAAJ,qBAAU,KAAC,MAAD,gCAAsBA,CAAtB,EAAV,EAA1C,CAJ1B,GATJ,GADA,CAmBD,CAED,cAAeV,CAAAA,MAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { checkValidity } from '../util/checkValidity';\nimport { isYellow } from '../util/isYellow';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 2px;\n  margin: 2px;\n  border: 1px solid rgba(0,0,0,0.1);\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Letter = styled.div<{ green?: boolean, yellow?: boolean, red?: boolean }>`\n  display: flex;\n  width: 20px;\n  height: 20px;\n  border: 1px solid rgba(0,0,0,0.3);\n  border-radius: 5px;\n  background-color: #F7F8F9;\n  align-items: center;\n  justify-content: center;\n  ${({ yellow }) => yellow && `\n    background-color: #EEDE23;  \n  `}\n  ${({ green }) => green && `\n    background-color: #22EE33;  \n  `}\n  ${({ red }) => red && `\n    background-color: #DE5956;\n  `}\n`;\n\nfunction Puzzle({\n  expired,\n  wordle,\n  working,\n  guesslist,\n}: {\n  expired: boolean,\n  wordle: string;\n  working: string;\n  guesslist: string[];\n}) {\n  return (\n  <Container>\n    {guesslist.map((guess, gnum) => (\n      <Row key={guess}>\n        {guess.split('').map((letter, i) => (\n          <Letter key={`${letter}${i},${gnum}`} green={letter === wordle[i]} yellow={isYellow(wordle, guess, i)}>{letter}</Letter>\n        ))}\n      </Row>\n    ))}\n    {!expired && \n      <Row>\n        {working.split('').map((letter, i) => (\n          <Letter red={working.length === 5 && !checkValidity(working)} key={`${letter}${i}W`}>{letter}</Letter>\n        ))}\n        {working.length <= 5 && Array.from(Array(5 - working.length)).map((e, i) => <Letter key={`empty-${i}`}> </Letter>)}\n      </Row>\n    }\n  </Container>\n  );\n}\n\nexport default Puzzle;\n"]},"metadata":{},"sourceType":"module"}